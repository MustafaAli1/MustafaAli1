# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
env:
  ENVIROMNET_STAGES: internal # production,staging

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Setup Environment and build
    runs-on: ubuntu-latest
    #if: ${{ github.repository.name ==  'ENVIROMNET_STAGES' }}
    steps:
      - uses: actions/checkout@v2

      #    - name: Set up ruby env
      #      uses: ruby/setup-ruby@v1
      #      with:
      #        ruby-version: '3.0.1'
      #        bundler-cache: true

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Generate app bundle     #assembleRelease, bundleRelease ,assembleDebug
        run: ./gradlew app:bundleRelease --stacktrace

      - name: Sign app bundle
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Build Artifacts
          path: |
            app/build/outputs/bundle/release/app-release.aab

      - name: Deploy to Play Store
        id: deploy-to-store
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: "com.test.fastlanedemo"
          releaseFiles: app/build/outputs/bundle/release/app-release.aab # ${{ github.workspace }}/app/build/outputs/bundle/release/*.aab
          track: internal   # production
          #userFraction: 0.99
          inAppUpdatePriority: 2

      - name: Send a Notification
        uses: toko-bifrost/ms-teams-deploy-card@master
        if: always()
        with:
            github-token: ${{ github.token }}
            webhook-uri: ${{ secrets.TEAM_WEBHOOK }}
            notification-summary: "Github Action Build Number ${{ github.run_number }} Completed for ${{ github.repository }} and the outcome is  ${{ step.deploy-to-store.outputs }}."
            notification-color: 17a2b8
            timezone: Asia/Karachi


#  notifications:
#    needs: [build]
#    if: always()
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Send a Notification
#        uses: toko-bifrost/ms-teams-deploy-card@master
#        with:
#          github-token: ${{ github.token }}
#          webhook-uri: ${{ secrets.TEAM_WEBHOOK }}
#          notification-summary: "Github Action Build Number ${{ github.run_number }} Completed for ${{ github.repository }} and the outcome is  ${{ needs.build.result }}."
#          notification-color: 17a2b8
#          timezone: Asia/Karachi

